(možda će trebati state malo preraditi da bude intuitivniji,ali ako je problem, samo je u 
simple.board, util.game_state i game_board - vidjeti nakon računalnog igrača)

Front end:
      klik event handleri na markovima samo kad su aktivirani - tako da možemo kliknuti bilo gdje na legalan field
      označiti nekako (crtice npr.) kad povežemo dva elementa
      - gradient neki u pozadini možda, background?
      odmah pri nastanku ciklusa mora biti vidljivo koje su varijante, koji su common, a koji nisu
      lagano se miču oko mjesta svi koji nisu sređeni
      animacija, za bigChar (dodavanje), kao i na mouseover (neka bolja - npr. taj i svi iz varijante se umire i povećaju, ostali se malo smanje).
	view eventove stopati jer ih ne propagiram nikada
Ostalo:
	classic pimpati, tako da mogu raditi s integerima i napraviti reprezentaciju pomoću skupa
	najbolje će biti skup particionirati po komponentama povezanosti


Event handlere gasiti, tako da ne ostaju reference na objekte

Funkcije koje samo crtaju izvaditi van, tako da ih ne reinstanciram


Board models:

1)graph

imamo komponente povezanosti
2 liste - key je move_number, value je fild
kad dodajemo fragment dodajemo ga točno u jednu od te dvije
kada radimo merge opet nam ostaju dvije varijante

2) classic
function bw(arr){
    if (arr.length!=9) {
	console.log('ERROR: arr.length!=9');
    }
    var num = 0;
    for (var i=0;i<9;i++) if (arr[i]==1) num+=Math.pow(2,i);
    return num;
}
function from_bw(num){
    var arr = [];
    var t = 0;
    for (i=8;i>=0;i--){
	t = Math.pow(2,i);
	arr[i]=Math.floor(num/t);
	num = num % t;
    }
    return arr;
}
//free_field(i) == !(num & Math.pow(2^i))
//set && win_line == win_line

//imamo candidate lines
//na svakom pushu provjerimo preostale za taj field number (koji nisu free)
  //ako sadrže i križić i kružić, izbacimo ga
  //ako je pobjednička linija za nekoga, javimo to


